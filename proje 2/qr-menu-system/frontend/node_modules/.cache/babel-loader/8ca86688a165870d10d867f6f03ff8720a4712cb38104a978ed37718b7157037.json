{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samet\\\\Desktop\\\\proje 2\\\\qr-menu-system\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem('token') || '');\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  // Token ile API istekleri için Axios instance\n  const authAxios = axios.create({\n    baseURL: '/api',\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n\n  // Kullanıcı bilgilerini yükleme\n  useEffect(() => {\n    const loadUser = async () => {\n      if (!token) {\n        setLoading(false);\n        return;\n      }\n      try {\n        const res = await authAxios.get('/auth/profile');\n        setUser(res.data.user);\n        setIsAuthenticated(true);\n      } catch (err) {\n        console.error('Kullanıcı profili yüklenirken hata:', err);\n        localStorage.removeItem('token');\n        setToken('');\n        setUser(null);\n        setIsAuthenticated(false);\n        setError('Oturum süresi dolmuş veya geçersiz token');\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadUser();\n  }, [token]);\n\n  // Kullanıcı girişi\n  const login = async (email, password) => {\n    setLoading(true);\n    try {\n      const res = await axios.post('/api/auth/login', {\n        email,\n        password\n      });\n      localStorage.setItem('token', res.data.token);\n      setToken(res.data.token);\n      setUser(res.data.user);\n      setIsAuthenticated(true);\n      setError('');\n      return true;\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error('Giriş hatası:', err);\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Giriş yaparken bir hata oluştu');\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Kullanıcı kaydı\n  const register = async userData => {\n    setLoading(true);\n    try {\n      const res = await axios.post('/api/auth/register', userData);\n      localStorage.setItem('token', res.data.token);\n      setToken(res.data.token);\n      setUser(res.data.user);\n      setIsAuthenticated(true);\n      setError('');\n      return true;\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      console.error('Kayıt hatası:', err);\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || 'Kayıt yapılırken bir hata oluştu');\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Profil güncelleme\n  const updateProfile = async userData => {\n    setLoading(true);\n    try {\n      const res = await authAxios.put('/auth/profile', userData);\n      setUser(res.data.user);\n      setError('');\n      return true;\n    } catch (err) {\n      var _err$response3, _err$response3$data;\n      console.error('Profil güncelleme hatası:', err);\n      setError(((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.message) || 'Profil güncellenirken bir hata oluştu');\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Çıkış yapma\n  const logout = () => {\n    localStorage.removeItem('token');\n    setToken('');\n    setUser(null);\n    setIsAuthenticated(false);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      token,\n      isAuthenticated,\n      loading,\n      error,\n      login,\n      register,\n      logout,\n      updateProfile,\n      authAxios\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"ULQ0/PyjTZ5Mc0unJUUeYfNhPhE=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","token","setToken","localStorage","getItem","isAuthenticated","setIsAuthenticated","loading","setLoading","error","setError","authAxios","create","baseURL","headers","Authorization","loadUser","res","get","data","err","console","removeItem","login","email","password","post","setItem","_err$response","_err$response$data","response","message","register","userData","_err$response2","_err$response2$data","updateProfile","put","_err$response3","_err$response3$data","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Samet/Desktop/proje 2/qr-menu-system/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [token, setToken] = useState(localStorage.getItem('token') || '');\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n\r\n  // Token ile API istekleri için Axios instance\r\n  const authAxios = axios.create({\r\n    baseURL: '/api',\r\n    headers: {\r\n      Authorization: `Bearer ${token}`\r\n    }\r\n  });\r\n\r\n  // Kullanıcı bilgilerini yükleme\r\n  useEffect(() => {\r\n    const loadUser = async () => {\r\n      if (!token) {\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const res = await authAxios.get('/auth/profile');\r\n        setUser(res.data.user);\r\n        setIsAuthenticated(true);\r\n      } catch (err) {\r\n        console.error('Kullanıcı profili yüklenirken hata:', err);\r\n        localStorage.removeItem('token');\r\n        setToken('');\r\n        setUser(null);\r\n        setIsAuthenticated(false);\r\n        setError('Oturum süresi dolmuş veya geçersiz token');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    loadUser();\r\n  }, [token]);\r\n\r\n  // Kullanıcı girişi\r\n  const login = async (email, password) => {\r\n    setLoading(true);\r\n    try {\r\n      const res = await axios.post('/api/auth/login', { email, password });\r\n      localStorage.setItem('token', res.data.token);\r\n      setToken(res.data.token);\r\n      setUser(res.data.user);\r\n      setIsAuthenticated(true);\r\n      setError('');\r\n      return true;\r\n    } catch (err) {\r\n      console.error('Giriş hatası:', err);\r\n      setError(err.response?.data?.message || 'Giriş yaparken bir hata oluştu');\r\n      return false;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Kullanıcı kaydı\r\n  const register = async (userData) => {\r\n    setLoading(true);\r\n    try {\r\n      const res = await axios.post('/api/auth/register', userData);\r\n      localStorage.setItem('token', res.data.token);\r\n      setToken(res.data.token);\r\n      setUser(res.data.user);\r\n      setIsAuthenticated(true);\r\n      setError('');\r\n      return true;\r\n    } catch (err) {\r\n      console.error('Kayıt hatası:', err);\r\n      setError(err.response?.data?.message || 'Kayıt yapılırken bir hata oluştu');\r\n      return false;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Profil güncelleme\r\n  const updateProfile = async (userData) => {\r\n    setLoading(true);\r\n    try {\r\n      const res = await authAxios.put('/auth/profile', userData);\r\n      setUser(res.data.user);\r\n      setError('');\r\n      return true;\r\n    } catch (err) {\r\n      console.error('Profil güncelleme hatası:', err);\r\n      setError(err.response?.data?.message || 'Profil güncellenirken bir hata oluştu');\r\n      return false;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Çıkış yapma\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    setToken('');\r\n    setUser(null);\r\n    setIsAuthenticated(false);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{\r\n      user,\r\n      token,\r\n      isAuthenticated,\r\n      loading,\r\n      error,\r\n      login,\r\n      register,\r\n      logout,\r\n      updateProfile,\r\n      authAxios\r\n    }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}