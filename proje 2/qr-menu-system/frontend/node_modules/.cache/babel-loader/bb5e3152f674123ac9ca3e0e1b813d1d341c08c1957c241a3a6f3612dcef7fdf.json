{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samet\\\\Desktop\\\\proje 2\\\\qr-menu-system\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\n\n// API URL'i (deployment için)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.REACT_APP_API_URL || '/api';\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem('token') || '');\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  // Token ile API istekleri için Axios instance\n  const authAxios = axios.create({\n    baseURL: API_URL,\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n\n  // Kullanıcı bilgilerini yükleme\n  useEffect(() => {\n    const loadUser = async () => {\n      if (!token) {\n        setLoading(false);\n        return;\n      }\n      try {\n        const res = await authAxios.get('/auth/profile');\n        setUser(res.data.user);\n        setIsAuthenticated(true);\n      } catch (err) {\n        console.error('Kullanıcı profili yüklenirken hata:', err);\n        localStorage.removeItem('token');\n        setToken('');\n        setUser(null);\n        setIsAuthenticated(false);\n        setError('Oturum süresi dolmuş veya geçersiz token');\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadUser();\n  }, [token]);\n\n  // Kullanıcı girişi\n  const login = async (email, password) => {\n    setLoading(true);\n    try {\n      console.log('Giriş yapılıyor:', email);\n      const res = await axios.post(`${API_URL}/auth/login`, {\n        email,\n        password\n      });\n      localStorage.setItem('token', res.data.token);\n      setToken(res.data.token);\n      setUser(res.data.user);\n      setIsAuthenticated(true);\n      setError('');\n      console.log('Giriş başarılı.');\n      return true;\n    } catch (err) {\n      console.error('Giriş hatası:', err);\n      if (err.response) {\n        console.error('Sunucu yanıtı:', err.response.status, err.response.data);\n        setError(err.response.data.message || 'Giriş yaparken bir hata oluştu');\n      } else if (err.request) {\n        console.error('Sunucuya ulaşılamadı:', err.request);\n        setError('Sunucuya bağlanılamıyor. Lütfen internet bağlantınızı kontrol edin.');\n      } else {\n        console.error('İstek hatası:', err.message);\n        setError('Giriş yapılırken bir hata oluştu');\n      }\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Kullanıcı kaydı\n  const register = async userData => {\n    setLoading(true);\n    try {\n      console.log('Kayıt yapılıyor:', userData.email);\n\n      // API'ye istek gönderilmeden önce bağlantı kontrolü\n      try {\n        await axios.get(`${API_URL}/test`);\n        console.log('API bağlantısı başarılı, kayıt işlemi devam ediyor...');\n      } catch (connErr) {\n        console.error('API bağlantı hatası (test):', connErr);\n        setError('Sunucu bağlantısı sağlanamadı. Lütfen backend servisinin çalıştığından emin olun.');\n        setLoading(false);\n        return false;\n      }\n      const res = await axios.post(`${API_URL}/auth/register`, userData);\n      console.log('Kayıt başarılı, yanıt:', res.data);\n      localStorage.setItem('token', res.data.token);\n      setToken(res.data.token);\n      setUser(res.data.user);\n      setIsAuthenticated(true);\n      setError('');\n      return true;\n    } catch (err) {\n      console.error('Kayıt hatası:', err);\n      if (err.response) {\n        console.error('Sunucu yanıtı:', err.response.status, err.response.data);\n        if (err.response.data.errors && Array.isArray(err.response.data.errors)) {\n          setError(err.response.data.errors.join(', '));\n        } else {\n          setError(err.response.data.message || 'Kayıt yapılırken bir hata oluştu');\n        }\n      } else if (err.request) {\n        console.error('Sunucuya ulaşılamadı:', err.request);\n        setError('Sunucuya bağlanılamıyor. Lütfen internet bağlantınızı ve backend servisinin çalıştığını kontrol edin.');\n      } else {\n        console.error('İstek hatası:', err.message);\n        setError('Kayıt yapılırken bir hata oluştu');\n      }\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Profil güncelleme\n  const updateProfile = async userData => {\n    setLoading(true);\n    try {\n      const res = await authAxios.put('/auth/profile', userData);\n      setUser(res.data.user);\n      setError('');\n      return true;\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error('Profil güncelleme hatası:', err);\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Profil güncellenirken bir hata oluştu');\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Çıkış yapma\n  const logout = () => {\n    localStorage.removeItem('token');\n    setToken('');\n    setUser(null);\n    setIsAuthenticated(false);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      token,\n      isAuthenticated,\n      loading,\n      error,\n      login,\n      register,\n      logout,\n      updateProfile,\n      authAxios\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"ULQ0/PyjTZ5Mc0unJUUeYfNhPhE=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","jsxDEV","_jsxDEV","API_URL","process","env","REACT_APP_API_URL","AuthContext","AuthProvider","children","_s","user","setUser","token","setToken","localStorage","getItem","isAuthenticated","setIsAuthenticated","loading","setLoading","error","setError","authAxios","create","baseURL","headers","Authorization","loadUser","res","get","data","err","console","removeItem","login","email","password","log","post","setItem","response","status","message","request","register","userData","connErr","errors","Array","isArray","join","updateProfile","put","_err$response","_err$response$data","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Samet/Desktop/proje 2/qr-menu-system/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\n// API URL'i (deployment için)\r\nconst API_URL = process.env.REACT_APP_API_URL || '/api';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [token, setToken] = useState(localStorage.getItem('token') || '');\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n\r\n  // Token ile API istekleri için Axios instance\r\n  const authAxios = axios.create({\r\n    baseURL: API_URL,\r\n    headers: {\r\n      Authorization: `Bearer ${token}`\r\n    }\r\n  });\r\n\r\n  // Kullanıcı bilgilerini yükleme\r\n  useEffect(() => {\r\n    const loadUser = async () => {\r\n      if (!token) {\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const res = await authAxios.get('/auth/profile');\r\n        setUser(res.data.user);\r\n        setIsAuthenticated(true);\r\n      } catch (err) {\r\n        console.error('Kullanıcı profili yüklenirken hata:', err);\r\n        localStorage.removeItem('token');\r\n        setToken('');\r\n        setUser(null);\r\n        setIsAuthenticated(false);\r\n        setError('Oturum süresi dolmuş veya geçersiz token');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    loadUser();\r\n  }, [token]);\r\n\r\n  // Kullanıcı girişi\r\n  const login = async (email, password) => {\r\n    setLoading(true);\r\n    try {\r\n      console.log('Giriş yapılıyor:', email);\r\n      const res = await axios.post(`${API_URL}/auth/login`, { email, password });\r\n      localStorage.setItem('token', res.data.token);\r\n      setToken(res.data.token);\r\n      setUser(res.data.user);\r\n      setIsAuthenticated(true);\r\n      setError('');\r\n      console.log('Giriş başarılı.');\r\n      return true;\r\n    } catch (err) {\r\n      console.error('Giriş hatası:', err);\r\n      if (err.response) {\r\n        console.error('Sunucu yanıtı:', err.response.status, err.response.data);\r\n        setError(err.response.data.message || 'Giriş yaparken bir hata oluştu');\r\n      } else if (err.request) {\r\n        console.error('Sunucuya ulaşılamadı:', err.request);\r\n        setError('Sunucuya bağlanılamıyor. Lütfen internet bağlantınızı kontrol edin.');\r\n      } else {\r\n        console.error('İstek hatası:', err.message);\r\n        setError('Giriş yapılırken bir hata oluştu');\r\n      }\r\n      return false;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Kullanıcı kaydı\r\n  const register = async (userData) => {\r\n    setLoading(true);\r\n    try {\r\n      console.log('Kayıt yapılıyor:', userData.email);\r\n      \r\n      // API'ye istek gönderilmeden önce bağlantı kontrolü\r\n      try {\r\n        await axios.get(`${API_URL}/test`);\r\n        console.log('API bağlantısı başarılı, kayıt işlemi devam ediyor...');\r\n      } catch (connErr) {\r\n        console.error('API bağlantı hatası (test):', connErr);\r\n        setError('Sunucu bağlantısı sağlanamadı. Lütfen backend servisinin çalıştığından emin olun.');\r\n        setLoading(false);\r\n        return false;\r\n      }\r\n      \r\n      const res = await axios.post(`${API_URL}/auth/register`, userData);\r\n      \r\n      console.log('Kayıt başarılı, yanıt:', res.data);\r\n      localStorage.setItem('token', res.data.token);\r\n      setToken(res.data.token);\r\n      setUser(res.data.user);\r\n      setIsAuthenticated(true);\r\n      setError('');\r\n      return true;\r\n    } catch (err) {\r\n      console.error('Kayıt hatası:', err);\r\n      \r\n      if (err.response) {\r\n        console.error('Sunucu yanıtı:', err.response.status, err.response.data);\r\n        if (err.response.data.errors && Array.isArray(err.response.data.errors)) {\r\n          setError(err.response.data.errors.join(', '));\r\n        } else {\r\n          setError(err.response.data.message || 'Kayıt yapılırken bir hata oluştu');\r\n        }\r\n      } else if (err.request) {\r\n        console.error('Sunucuya ulaşılamadı:', err.request);\r\n        setError('Sunucuya bağlanılamıyor. Lütfen internet bağlantınızı ve backend servisinin çalıştığını kontrol edin.');\r\n      } else {\r\n        console.error('İstek hatası:', err.message);\r\n        setError('Kayıt yapılırken bir hata oluştu');\r\n      }\r\n      \r\n      return false;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Profil güncelleme\r\n  const updateProfile = async (userData) => {\r\n    setLoading(true);\r\n    try {\r\n      const res = await authAxios.put('/auth/profile', userData);\r\n      setUser(res.data.user);\r\n      setError('');\r\n      return true;\r\n    } catch (err) {\r\n      console.error('Profil güncelleme hatası:', err);\r\n      setError(err.response?.data?.message || 'Profil güncellenirken bir hata oluştu');\r\n      return false;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Çıkış yapma\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    setToken('');\r\n    setUser(null);\r\n    setIsAuthenticated(false);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{\r\n      user,\r\n      token,\r\n      isAuthenticated,\r\n      loading,\r\n      error,\r\n      login,\r\n      register,\r\n      logout,\r\n      updateProfile,\r\n      authAxios\r\n    }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}